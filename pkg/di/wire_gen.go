// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/ashiqsabith123/api-gateway/pkg/api"
	"github.com/ashiqsabith123/api-gateway/pkg/api/handler"
	"github.com/ashiqsabith123/api-gateway/pkg/config"
	"github.com/ashiqsabith123/api-gateway/pkg/services/auth-svc/client"
	"github.com/ashiqsabith123/api-gateway/pkg/services/auth-svc/functions"
	client2 "github.com/ashiqsabith123/api-gateway/pkg/services/match-svc/client"
	functions2 "github.com/ashiqsabith123/api-gateway/pkg/services/match-svc/functions"
	client3 "github.com/ashiqsabith123/api-gateway/pkg/services/notification-svc/client"
	functions3 "github.com/ashiqsabith123/api-gateway/pkg/services/notification-svc/functions"
)

// Injectors from wire.go:

func InitializeApi(config2 config.Config) *server.Server {
	authClient := client.NewAuthClient(config2)
	authFunctions := functions.NewAuthFunctions(authClient)
	authHandler := handler.NewAuthHandler(authFunctions)
	matchClient := client2.NewMatchClient(config2)
	matchFunctions := functions2.NewMatchFunctions(matchClient)
	matchHandler := handler.NewMatchHandler(matchFunctions)
	notificationClient := client3.NewNotificationClient(config2)
	notificationFunctions := functions3.NewNotificationFunctions(notificationClient)
	notificationHandler := handler.NewNotificationHandler(notificationFunctions)
	serverServer := server.NewServer(authHandler, matchHandler, notificationHandler)
	return serverServer
}
